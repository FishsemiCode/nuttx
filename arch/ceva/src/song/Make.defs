############################################################################
# arch/ceva/src/song/Make.defs
#
#   Copyright (C) 2018 Pinecone Inc. All rights reserved.
#   Author: Xiang Xiao <xiaoxiang@pinecone.net>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# arch/ceva/src/common
#
CMN_CSRCS  += up_assert.c up_blocktask.c up_board.c up_checkstack.c
CMN_CSRCS  += up_createstack.c up_doirq.c up_exit.c up_heap.c
CMN_CSRCS  += up_fullcontextrestore.c up_idle.c up_initialize.c
CMN_CSRCS  += up_interruptcontext.c up_modifyreg8.c up_modifyreg16.c
CMN_CSRCS  += up_modifyreg32.c up_pthread_start.c up_puts.c
CMN_CSRCS  += up_releasepending.c up_releasestack.c up_reprioritizertr.c
CMN_CSRCS  += up_saveusercontext.c up_schedulesigaction.c up_sigdeliver.c
CMN_CSRCS  += up_signal_dispatch.c up_stackframe.c up_start.c up_svcall.c
CMN_CSRCS  += up_switchcontext.c up_task_start.c up_unblocktask.c up_usestack.c
CMN_CSRCS  += up_vfork.c
CMN_UCSRCS += up_userspace.c

ifeq ($(CONFIG_ARCH_TL420)$(CONFIG_ARCH_TL421),y)
# arch/ceva/src/tl4
#
CMN_ASRCS  += syscall.S up_svcall_handler.S vfork.S
CMN_CSRCS  += up_cache.c up_hardfault.c up_initialstate.c
CMN_CSRCS  += up_intc.c up_mpu.c up_psu.c
CMN_UASRCS += syscall.S up_signal_handler.S
HEAD_ASRC  += up_head.S

else ifeq ($(CONFIG_ARCH_XM6),y)
# arch/ceva/src/xm6
#
CMN_ASRCS  += syscall.S up_svcall_handler.S vfork.S
CMN_CSRCS  += up_hardfault.c up_icache.c up_initialstate.c
CMN_CSRCS  += up_intc.c up_mpu.c up_psu.c
CMN_UASRCS += syscall.S up_signal_handler.S
HEAD_ASRC  += up_head.S

endif

# arch/ceva/src/song
#
CHIP_CSRCS += abies_adsp.c banks_adsp.c banks_vdsp.c u2_adsp.c v1_vdsp.c
CHIP_CSRCS += dw_vintc.c
CHIP_CSRCS += song_addrenv.c
