############################################################################
# arch/ceva/src/xc5/Toolchain.defs
#
#   Copyright (C) 2019 Fishsemi Inc. All rights reserved.
#   Author: Bo Zhang <zhangbo@fishsemi.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

RTL_VERSION := $(CONFIG_ARCH_RTL_MAJOR).$(CONFIG_ARCH_RTL_MINOR).$(CONFIG_ARCH_RTL_REVISION)

ITCM_KB := $(shell expr $(CONFIG_ARCH_ITCM_SIZE) / 1024)
DTCM_KB := $(shell expr $(CONFIG_ARCH_DTCM_SIZE) / 1024)

#
# Supported toolchains
#
# Each toolchain definition should set:
#
#  CROSSDEV         The GNU toolchain triple (command prefix)
#  ARCROSSDEV       If required, an alternative prefix used when
#                   invoking ar and nm.
#  ARCHCPUFLAGS     CPU-specific flags selecting the instruction set
#                   FPU options, etc.
#  MAXOPTIMIZATION  The maximum optimization level that results in
#                   reliable code generation.
#

ARCROSSDEV ?= $(CROSSDEV)
ifneq ($(CROSSDEV),)
  export LD_LIBRARY_PATH := $(CROSSDEV):$(LD_LIBRARY_PATH)
  export PATH            := $(CROSSDEV):$(PATH)
  export CEVAXMTOOLS     := $(CROSSDEV)
endif

ifeq ($(CONFIG_DEBUG_CUSTOMOPT),y)
  MAXOPTIMIZATION := $(CONFIG_DEBUG_OPTLEVEL)
else ifeq ($(CONFIG_DEBUG_FULLOPT),y)
  MAXOPTIMIZATION := -O3 -Os3
endif

ARCHCPUFLAGS  = -mrtl-version-$(RTL_VERSION) -Wa,-rtl$(RTL_VERSION)
ARCHCPUFLAGS += -Wa,-p -mmsg-full-path -TARG:arch=cevaxc5 -Wa,-vdiv4 -Wno-unused

LDFLAGS  = -alignAllSections,c:0x20,d:0x4 -cevaxc5 -removeUnRefFunc
LDFLAGS += -internalCode$(ITCM_KB) -internalData$(DTCM_KB)

LIBGCC  = $(CROSSDEV)libs/xc5/cevaxclib.lib
LIBGCC += $(CROSSDEV)libs/xc5/libcc.lib

ifeq ($(CONFIG_WINDOWS_CYGWIN),y)
  WINTOOL = y
endif

CC  = $(CROSSDEV)/cevaxccc -mquiet -Wa,-quiet
CXX = $(CROSSDEV)/cevaxccc -mquiet -Wa,-quiet -x c++
CPP = $(CROSSDEV)/cevaxccc -mquiet -Wa,-quiet -E -P -x c
