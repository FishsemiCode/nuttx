############################################################################
# arch/csky/src/ch2201/Make.defs
#
# # Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# Specify our HEAD assembly file.  This will be linked as
# the first object file, so it will appear at address 0
HEAD_ASRC = startup.S

# Specify our general Assembly files
CHIP_ASRCS = up_fullcontextrestore.S up_saveusercontext.S up_vectors.S

# If we are compiling the NELIB library, then specify it
# in AFLAGS so we can change up our startup behavior
ifeq ($(CONFIG_LIB_NEWLIB),y)
AFLAGS += -DCONFIG_LIB_NEWLIB
endif

# Override the arch to enable hardware MUL during assembly.
# This is to support our hardware mul test.  For that test,
# we have to disable hardware mul for C code so the soft
# math libs will be used to compare software mul vs hw mul.
# But hw mul must be enabled to compile the .S file, or we
# will get an illegal instruction error.
#ASARCHCPUFLAGS += -march=RV32IMXcustom

# Specify C code within the common directory to be included
CMN_CSRCS  += up_assert.c up_decodeirq.c up_mdelay.c up_traps.c up_udelay.c up_vfork.c
CMN_CSRCS  += up_allocateheap.c up_blocktask.c up_checkstack.c up_copyfullstate.c
CMN_CSRCS  += up_createstack.c up_exit.c up_idle.c up_initialize.c up_initialstate.c
CMN_CSRCS  += up_interruptcontext.c up_releasepending.c up_releasestack.c
CMN_CSRCS  += up_reprioritizertr.c up_schedulesigaction.c up_sigdeliver.c
CMN_CSRCS  += up_stackframe.c up_systemreset.c up_unblocktask.c up_usestack.c

ifeq ($(CONFIG_ARCH_HAVE_VFORK),y)
CHIP_ASRCS += vfork.S
CMN_CSRCS  += up_vfork.c
endif

# Specify our C code within this directory to be included
CHIP_CSRCS  = system.c sys_freq.c pinmux.c devices.c board_init.c main.c
CHIP_CSRCS += dw_usart.c ch2201_irq.c ch2201_timerisr.c ch2201_serial.c
CHIP_CSRCS += isr.c trap_c.c novic_irq_tbl.c

ifeq ($(CONFIG_TIMER),y)
CHIP_CSRCS +=
endif

