############################################################################
# arch/arm/src/song/Make.defs
#
#   Copyright (C) 2017 Pinecone Inc. All rights reserved.
#   Author: Xiang Xiao <xiaoxiang@pinecone.net>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# arch/arm/src/common
#
CMN_CSRCS += up_checkstack.c up_createstack.c up_exit.c up_hostfs.c
CMN_CSRCS += up_initialize.c up_interruptcontext.c up_modifyreg8.c
CMN_CSRCS += up_modifyreg16.c up_modifyreg32.c up_pthread_start.c
CMN_CSRCS += up_puts.c up_releasestack.c up_semi_syslog.c
CMN_CSRCS += up_stackframe.c up_task_start.c up_usestack.c up_vfork.c

ifeq ($(CONFIG_ARCH_FAMILY),"armv7-a")
# arch/arm/src/armv7-a
#
HEAD_ASRC += arm_vectortab.S

CMN_ASRCS += arm_cpuhead.S arm_pghead.S
CMN_ASRCS += arm_fetchadd.S arm_fpuconfig.S arm_fullcontextrestore.S
CMN_ASRCS += arm_restorefpu.S arm_savefpu.S arm_saveusercontext.S arm_testset.S
CMN_ASRCS += arm_vectoraddrexcptn.S arm_vectors.S arm_vfork.S
CMN_ASRCS += cp15_clean_dcache.S cp15_coherent_dcache.S cp15_flush_dcache.S
CMN_ASRCS += cp15_invalidate_dcache.S cp15_invalidate_dcache_all.S

CMN_CSRCS += arm_addrenv.c arm_addrenv_kstack.c arm_addrenv_shm.c arm_addrenv_ustack.c arm_addrenv_utils.c
CMN_CSRCS += arm_allocpage.c arm_assert.c arm_blocktask.c arm_cache.c arm_checkmapping.c arm_copyarmstate.c
CMN_CSRCS += arm_copyfullstate.c arm_cpuidlestack.c arm_cpuindex.c arm_cpupause.c arm_cpustart.c
CMN_CSRCS += arm_dataabort.c arm_doirq.c arm_gicv2.c arm_gicv2_dump.c arm_initialstate.c arm_l2cc_pl310.c
CMN_CSRCS += arm_mmu.c arm_pgalloc.c arm_pginitialize.c arm_physpgaddr.c arm_prefetchabort.c
CMN_CSRCS += arm_releasepending.c arm_reprioritizertr.c arm_schedulesigaction.c arm_scu.c
CMN_CSRCS += arm_sigdeliver.c arm_signal_dispatch.c arm_syscall.c
CMN_CSRCS += arm_unblocktask.c arm_undefinedinsn.c arm_va2pte.c arm_virtpgaddr.c

else ifeq ($(CONFIG_ARCH_FAMILY),"armv7-m")
# arch/arm/src/armv7-m
#
ifneq ($(CONFIG_ARMV7M_LAZYFPU),y)
  CMN_ASRCS += up_exception.S
else
  CMN_ASRCS += up_lazyexception.S
endif

CMN_ASRCS += up_fetchadd.S up_fpu.S
CMN_ASRCS += up_fullcontextrestore.S up_saveusercontext.S
CMN_ASRCS += up_switchcontext.S up_testset.S vfork.S

CMN_UASRCS += up_signal_handler.S

CMN_CSRCS += up_assert.c up_blocktask.c up_cache.c up_copyarmstate.c
CMN_CSRCS += up_copyfullstate.c up_doirq.c up_hardfault.c up_initialstate.c
CMN_CSRCS += up_itm_syslog.c up_memfault.c up_mpu.c up_ramvec_attach.c
CMN_CSRCS += up_ramvec_initialize.c up_releasepending.c up_reprioritizertr.c
CMN_CSRCS += up_schedulesigaction.c up_sigdeliver.c up_signal_dispatch.c
CMN_CSRCS += up_stackcheck.c up_svcall.c up_systick.c up_unblocktask.c
CMN_CSRCS += up_vectors.c

endif

# arch/arm/src/song
#
HEAD_ASRC += banks_a7_bootram.S

CHIP_ASRCS += arm_head.S
CHIP_CSRCS += arm_fpu.c arm_gic.c arm_mpu.c arm_nvic.c
CHIP_CSRCS += abies_a7_clk.c
CHIP_CSRCS += banks_a7.c banks_a7_clk.c banks_sensor.c banks_sensor_clk.c banks_rpm.c
CHIP_CSRCS += fvp_mps2_m4.c
CHIP_CSRCS += song_board.c song_heap.c
CHIP_CSRCS += song_icache.c song_idle.c song_start.c
CHIP_CSRCS += u1_ap.c u1_ap_clk.c u1_cp.c u1_cp_clk.c u1_sp.c u1_sp_clk.c
CHIP_CSRCS += u2_m4.c u2_m4_clk.c

CHIP_UCSRCS += song_userspace.c
