#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#

config CRYPTO
	bool "Crypto API support"
	default n
	---help---
		Enable or disable Crypto API features

if CRYPTO

config CRYPTO_AES
	bool "AES cipher support"
	default n

# =============================================================================
config CRYPTO_MANAGER
	bool "Cryptographic manager support"
	default n

if CRYPTO_MANAGER

config CRYPTO_MANAGER_NMODULES
	int "Number of preallocated modules"
	default 2

config CRYPTO_MANAGER_DYNMODULES
	bool "Allow more dynamically allocated modules"
	default n

choice
	prompt "Entropy source"
	default CRYPTO_MANAGER_ENTROPY_DEVRANDOM if STM32_RNG || STM32L4_RNG

config CRYPTO_MANAGER_ENTROPY_DEVRANDOM
	bool "Use system hardware based /dev/random"

config CRYPTO_MANAGER_ENTROPY_BOARD
	bool "Use board level callback to generate entropy"

endchoice

config CRYPTO_SOFTMODULE
	bool "Software cryptographic module"
	default n
	depends on CRYPTO_MANAGER

if CRYPTO_SOFTMODULE

config CRYPTO_SOFTMODULE_RAMKEYS
	int "Maximum number of volatile keys per session"
	default 4

if CRYPTO_AES

config CRYPTO_SOFTMODULE_AES
	bool "Support for AES algorithms"
	default n

endif # AES

endif # SOFTMODULE

endif # MANAGER
# =============================================================================

config CRYPTO_ALGTEST
	bool "Perform automatic crypto algorithms test on startup"
	default n

if CRYPTO_ALGTEST

config CRYPTO_AES128_DISABLE
	bool "Omit 128-bit AES tests"
	default n

config CRYPTO_AES192_DISABLE
	bool "Omit 192-bit AES tests"
	default n

config CRYPTO_AES256_DISABLE
	bool "Omit 256-bit AES tests"
	default n

endif # CRYPTO_ALGTEST

config CRYPTO_CRYPTODEV
	bool "cryptodev support"
	default n

config CRYPTO_SW_AES
	bool "Software AES library"
	default n
	---help---
		Enable the software AES library as described in
		include/nuttx/crypto/aes.h

		TODO: Adapt interfaces so that they are consistent with H/W AES
		implementations.  This needs to support up_aesinitialize() and
		aes_cypher() per include/nuttx/crypto/crypto.h.

config CRYPTO_SW_SHA256
	bool "Software SHA256 library"
	default n
	---help---
		Enable the software SHA256 library

config CRYPTO_SW_RSA
	bool "Software RSA library"
	default n
	depends on CRYPTO_SW_SHA256
	---help---
		Enable the software RSA library

config CRYPTO_SONG_SIGNATURE
	bool "Song signature verify"
	default n
	select CRYPTO_SW_SHA256
	select CRYPTO_SW_RSA
	---help---
		Enable the song signature support

config CRYPTO_BLAKE2S
	bool "BLAKE2s hash algorithm"
	default n
	---help---
		Enable the BLAKE2s hash algorithm

config CRYPTO_RANDOM_POOL
	bool "Entropy pool and strong randon number generator"
	default n
	select CRYPTO_BLAKE2S
	---help---
		Entropy pool gathers environmental noise from device drivers,
		user-space, etc., and returns good random numbers, suitable
		for cryptographic use. Based on entropy pool design from
		*BSDs and uses BLAKE2Xs algorithm for CSPRNG output.

		NOTE: May not actually be cyptographically secure, if
		not enough entropy is made available to the entropy pool.

if CRYPTO_RANDOM_POOL

config CRYPTO_RANDOM_POOL_COLLECT_IRQ_RANDOMNESS
	bool "Use interrupts to feed timing randomness to entropy pool"
	default y
	---help---
		Feed entropy pool with interrupt randomness from interrupt
		dispatch function 'irq_dispatch'. This adds some overhead
		for every interrupt handled.

endif # CRYPTO_RANDOM_POOL

endif # CRYPTO
